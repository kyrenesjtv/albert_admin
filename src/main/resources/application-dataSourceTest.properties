# 数据库访问配置
# 主数据源，默认的
#spring.mysql.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.read.mysql.datasource.driverClassName = com.mysql.cj.jdbc.Driver
# serverTimezone=GMT%2B8 为什么要加这个？不加这个时区连接会报错
spring.read.mysql.datasource.url = jdbc:mysql://59.202.48.76:3312/zjgwyc0710?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
spring.read.mysql.datasource.username = zjgwyc06
spring.read.mysql.datasource.password = Zjgwyc2019



# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.mysql.datasource.initialSize = 51
spring.mysql.datasource.minIdle = 100
spring.mysql.datasource.maxActive = 200
# 配置获取连接等待超时的时间
spring.mysql.datasource.maxWait = 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.mysql.datasource.timeBetweenEvictionRunsMillis = 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.mysql.datasource.minEvictableIdleTimeMillis = 300000
#spring.mysql.datasource.validationQuery = select 1
spring.mysql.datasource.testWhileIdle = true
spring.mysql.datasource.testOnBorrow = false
spring.mysql.datasource.testOnReturn = false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.mysql.datasource.poolPreparedStatements = true
spring.mysql.datasource.maxPoolPreparedStatementPerConnectionSize = 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.mysql.datasource.filters = stat, wall, log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.mysql.datasource.connectionProperties = druid.stat.mergeSql = true; druid.stat.slowSqlMillis = 5000
# 合并多个DruidDataSource的监控数据
# spring.mysql.datasource.useGlobalDataSourceStat = true





